<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
	<!-- mybatis related... start -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- 这里支持多种寻址方式：classpath和file -->
				<value>classpath:jdbc.properties</value>
				<value>classpath:memcache.properties</value>
				<!-- 推荐使用file的方式引入，这样可以将配置和代码分离 -->
			</list>
		</property>
	</bean>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource ">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://${jdbc.host}:${jdbc.port}/${jdbc.database}?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="acquireIncrement" value="1" />
		<property name="initialPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="minPoolSize" value="5" />
		<property name="maxStatements" value="100" />
		<property name="testConnectionOnCheckout" value="true" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="/WEB-INF/classes/mybatis-config.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.defonds.bdp.*.mapper" />
	</bean>
	<!-- mybatis related... end -->

<context:component-scan base-package="com.defonds.bdp.cache.redis" />  
	<bean id="CacheKeyGenerator" class="com.defonds.bdp.cache.redis.CacheKeyGenerator">
	</bean>

<!-- 	<! memcache related... start --> 
	<bean id="memcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
		<constructor-arg>
			<list>
				<bean class="java.net.InetSocketAddress">
					<constructor-arg value="${memcache.ip}" />
					<constructor-arg value="${memcache.port}" />
				</bean>
			</list>
		</constructor-arg>
		<property name="connectionPoolSize" value="${memcache.pool.size}" />
		<property name="name" value="zqg" />
 		<property name="commandFactory"> 
 			<bean class="net.rubyeye.xmemcached.command.BinaryCommandFactory" /> 
 		</property> 
 		<property name="transcoder"> 
 			<bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" /> 
 		</property> 
	</bean>

	<bean id="memcachedClient" factory-bean="memcachedClientBuilder"
		factory-method="build" destroy-method="shutdown" />

	<bean id="cacheManager"
		class="memcache.MemcachedCacheManager">
			<property name="memcachedClient" ref="memcachedClient" />
			<property name="configMap">
		<map>
				<entry key="defaultCache" value="0" />
				<entry key="inTimeCache" value="30" />
		</map>
	</property>
	</bean>

	<cache:annotation-driven cache-manager="cacheManager" />
<!-- 	<! memcache related... end --> 


	<context:component-scan base-package="com.defonds.bdp.*.service" />

	<context:annotation-config />

</beans> 